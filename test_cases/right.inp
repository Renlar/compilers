5;
123;
5.0;
12.3;
1 and 0;
0 or 0;
not (0 and 0);
10.0 - (10.0 / 2.0);
5 - 5 + 1 * 0;
5.0 - 4.9 * 0.2;
5 * 5 + 1;
0.5 * 0.5 + 0.75;
5.0 / 5.0 + 1.0;
1::[];
1::[2,3,4,5];
[];
2::alist;
tl alist;
hd alist;
val x = ref 1;
val y = ref 2;
val z = ref 3;
x := 5;
y := 6;
z := 7;
x;
!x;
!y;
!z;
val a = ref 2;
val a : real ref = ref 2.0;
let val a = ref 2.0; val b = 3 in 
    a + b
end;

let val a = ref 5.5 in
    let val b = ref 6.0 in
        a + b;
        b + a
    end
end;

if b = 3 then b + 5 else a;

if c = 4 then b + 5 else if a = 1 then 5 else 6;

val i = ref 5;
while (!i < 10) do
(
        i := !i + 1
);
fun DupR(x : int, y : int ref) = 
    if (x < y) then
        y + (y - x)
    else if (x = y) then 
        y + x
    else 
        DupR(x, y + x);

let val a : int = 1 in
while (a < 20) do
(if (a < 10) then 
	if (a > 5) then a := a + 2 else a := a * 2
	else a := a + 3)
end;

fun example( x : int list, y : int list ) =
  let
    val a = ref 20;
    val b = 1;
    val tmp : int list = [22, 33]
  in
    tmp := x :: y;
    while (!a > 0) do (
      if (!a = 10) and (b = 1) 
        then (tmp := !a :: !tmp; a := (!a - 9) * 3; func(10, 11, 12))
      else (tmp := !a :: !tmp; a := !a - 1)
    );
    !tmp
  end;
  
let val a = 1.0; val t : real list ref = ref [5.5 , 4.5 + 7.6] in
  let val c : real list ref = ref [a+1] ; val k = ref 3.0 in
    let val b = 3.0; val tmp : real list ref = [] in
		k = a * b;
		tmp = tl(t) :: hd(c) :: [k]
    end
  end
end;

if (!a < b) and (b or c) or (!c > a)
	then (tmp := hd(x) :: tl(y); a := a - 5; fact(a)) 
else (tmp := [a+b, c-d] :: tl(y); a := b + c / d - a * k; fact(a));

val t : real list ref = ref [5.5 , 4.5 + 7.6];

f(a * b, k+1, c::[]);

fun fact (n : int) = if n=0 then 1 else n * fact(n-1);
[[[]],[[[]]]];
(a;tl(b);c);
test();
fact(2);
!x;
3;

3;
3.5;
x;
[a,2,hd(a)];
7.2/9.0+1.5-b;
not (a or b);
(a+b);
(a;b);
if 2=3 then a else b;
while 1 do (1 + 4);

let val a = ref 2.0 ; fun first(y: int list) = hd(y)
in
a;
b;
c
end;

gcd(a,b);

val a : real ref = ref 2.0;

fun first(y: int list) = hd(y);

val a = ref 2.0;
val a : real ref = ref 2.0;
val b = ref 3;
val b : int list = ref 3;

fun first(y : int list) = 4;

7;
6.4;
result;

25+2;
fun length(y : int, z : real list ) = 0;
2.5+3.2;
2;
2.5;
x;
fun gcd() = [25+2=27, 8, 9, aaaaa];
[1,2,3,4];
[];
[(b := 4+3), 25 * 10, ref z];
a-b;
a*b;
2/1+3;
2=3;
aandb;
ref a;
not (a and b);
(a+b; 2+2);
if (a<b) then a else b;
while (!a < b) do a + b;
val a = ref 2.0;
val a : real ref = ref 2.0;
fun first(y: int list, z : real) = hd(y);
5 * 6 / 3 -2;
1::2::3::10;
7891044444;
a := 8+9;
(a+z);