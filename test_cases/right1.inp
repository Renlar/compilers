!(a or b);
let val a = ref 2.0;
val b =3 in !a+b end;
5+b;
(a<b; b:=9);
abc([1,3,5]);
fun forme() = 7::8;
if (a + b =3) then a::e else (1+1; b; 5<6); 

25;

fun Dup(x : int ,y : int ) = if (x < y) then y + (y - x)
		else if (x = y) then y + x
	             else Dup(x, y + x);

fun Dup1(x : int , y: int) =  let val rx = ref x;
                  val ry = ref y
                  in while (!rx > !ry) 
		     do 
		     (
			ry := !ry + !rx
			
 	             );
	       	 if (!rx < !ry) then !ry + (!ry - !rx) 
		 else (!ry + !ry)
		 end;	

let val x = ref 5.0;  val y = ref 5.0
in
  x := !x - !y;
  y := !x / !y;
  y
end;

fun FailProjects() = (
	if (fact(!y) > hd(2::[4,5,8,10])) then (
		5=25+4*7;
		[5,2,5,2,5,2,5];
		(6;8;4;5;6);

		let val z = ref a; val i = y
		in
			while (y > 0) do (
				5-5;
				go+ab;
				product := !n;
				n := !n - 1)
		end)
	else(
		havenotfailedyet(tryagain());
		[];
		hd(1::[]);
		let val n = ref m; val product = ref 0
		in
			product := !n;
			n := !n - 1;
			while not(!n=0) do (
				product := !product * !n;
				n := !n - 1
			);
			!product
		end
));

25; 11-31.2; val jj=23.2; 

25+32;
77.01+1;
777.21+2132.11;
123*22.21;
3.1459/1.0;

22 > 32;

((2*3+a)-22.1)/3.141592;
val b=1;
val abc : int = 1234;
val a : int ref = 2.0;
a := 124+2.0*66 / (1234-111.0) < 2;

fun test(name: int) = 3.1;
name;

a := [123,44];

b := (5 and 6);
32-1 or 2.2;

5 :: 32;
val xyz : int ref = ref 2.9;
val j = not (123/2>3);

while a do b;

if a then b else c;

dd;
((((match + match1 - 3) +2 ) :: 2.0) and 1);

101;
2+5;
9-4;
4*4;
10/2;
x+y;

2.9;

[1,2,3, 4];

fun sum() = 2*2;
fun square(x:int) = x*x;

if x=y then 3*3 else 9;
if x<y then x else y;

let val a=ref 2.0; val b=ref 3.0 in
  a := !a+!b;
  b := !a*!a;
  b
end;

fun first(y:int list) = hd(y);

while(!a < b) do a:= !a + 1;

let val x1 = 5; val ab: int ref = ref 3; val y = ~1.67 in
	ab := hd(!ab) + y * x;
	if !ab < 2 and not !ab > 3 then ab := ~2 else ab := 3.1415;
	!ab
	end;

let val x = 2; val y = [2,3,4,5]; val z = ref 0 in
	let fun add(x: int,q: int list) = x + hd(q) in
	z:=add(x,y)
	end;
	!z
end;

1+2+ 3 +4 + 5*6* 7 *8 * 9-10- 11 -12 - 13/14/ 15 /16 / 17;
1+2*3/4-5/6*7+1-2;

val identifier_012_TEST_1aA2Aa = if (2 < 3 and (2 < 4 or 2 > 1))
  then 2
  else 3;

let fun foo(bar : int, baz : int list) = let val a = 1 in a end;
    val b = ref 2;
    fun abc() = 3;
    val c = 4
in
  while !b > 0 do b := !b - 1
end;

val a = ref 3;

while (0 < !a) do
  (a := !a - 1; a + a);

1::[1,2];
3:: [4,5,6];
7 ::[8];
9 :: [10];
[] :: [[1],[2,3]];
hd [1];
tl [2];